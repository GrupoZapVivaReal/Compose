fastlane_version "1.108.0"

default_platform :ios

def pod 
  {
    pod_name: "Compose",
    scheme: "Compose-pod",
    url: "git@github.com:VivaReal/Compose"
  }
end 

def xcodeproj
  "./#{pod[:pod_name]}.xcodeproj/"
end

def podspec
"./#{pod[:pod_name]}.podspec"
end

def plist
"./#{pod[:pod_name]}/Info.plist"
end

def get_version_short_string
  get_info_plist_value(path: plist, key: 'CFBundleShortVersionString')
end



platform :ios do 

private_lane :update_version_number_and_commit do |options|
 ensure_git_status_clean
 new_version_number = options[:number]
 bump_type = options[:bump_type]
  if (xcodeproj == nil)
    raise "Your fastlane File is missing a xcodeproj variable: xcodeproj = './PATH_TO_PROJECT.xcodeproj/' ".red
  end
if xcodeproj
  if new_version_number
   increment_version_number(version_number: new_version_number,
    xcodeproj: xcodeproj)
 elsif bump_type
   increment_version_number(bump_type: bump_type,xcodeproj: xcodeproj)
 else
   increment_version_number(xcodeproj: xcodeproj)
  end
 version_number = get_version_short_string
 sh "git commit -am \"Change version number: #{version_number} \" "
 version_number
  end
end


desc "Change version number with prompt"
lane :change_version_number do
 number = prompt(text: 'Version number: ')
 version_number = update_version_number_and_commit(number:number)
 version_number
end

desc "Create pull request to publish new Pod version"

desc "Increment Patch version"
lane :patch do 
 version_number = update_version_number_and_commit(bump_type:"patch")
 version_number
end

desc "Increment minor version"
lane :minor do 
 version_number = update_version_number_and_commit(bump_type:"minor")
 version_number
end  

desc "Increment major version"
lane :major do 
 version_number = update_version_number_and_commit(bump_type:"major")
 version_number
end

#----------------------- Validate for pull Request from the current branch  ---------------------#

desc "This lane is just testing the app and checked if the podspec validate"
lane :validate_pr do 
  sh  "git status"
  ensure_git_status_clean
  sh "git fetch --tags"
  last_tag = last_git_tag
  version_number = get_info_plist_value(path: plist, key: 'CFBundleShortVersionString')

if (Gem::Version.new(last_tag) >= Gem::Version.new(version_number))
   raise "There is already a tag with this number version. If you want to force create a tag do: fastlane tag force:true \nYou should first update the version number with : bundle exec fastlane patch | bundle exec fastlane minor | bundle exec fastlane major".yellow
  else
    UI.success "it is ok, all good! #{last_tag} != #{version_number}ðŸ’ª".green
  end

  scan(scheme:"#{pod[:scheme]}",clean:true)
  sh "bundle exec pod spec lint .#{podspec} --allow-warnings --quick"

end

 after_all do |lane|
   notification(message:"Finished lane: #{lane}")
 end
 
 error do |lane, exception|
   notification(subtitle: "Erro in lane: #{lane}", message:"Erro in lane: #{exception}")
 end
 
end

